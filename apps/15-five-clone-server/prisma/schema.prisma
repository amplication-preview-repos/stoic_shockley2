datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  checkIns  CheckIn[]
  createdAt DateTime  @default(now())
  email     String?   @unique
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model Objective {
  createdAt   DateTime    @default(now())
  createdBy   String?
  description String?
  dueDate     DateTime?
  id          String      @id @default(cuid())
  keyResults  KeyResult[]
  title       String?
  updatedAt   DateTime    @updatedAt
}

model Feedback {
  comment    String?
  createdAt  DateTime  @default(now())
  givenAt    DateTime?
  givenBy    String?
  id         String    @id @default(cuid())
  rating     Int?
  receivedBy String?
  updatedAt  DateTime  @updatedAt
}

model KeyResult {
  createdAt   DateTime             @default(now())
  createdBy   String?
  description String?
  dueDate     DateTime?
  id          String               @id @default(cuid())
  objective   Objective?           @relation(fields: [objectiveId], references: [id])
  objectiveId String?
  status      EnumKeyResultStatus?
  title       String?
  updatedAt   DateTime             @updatedAt
}

model CheckIn {
  checkInDate DateTime?
  createdAt   DateTime           @default(now())
  createdBy   String?
  id          String             @id @default(cuid())
  status      EnumCheckInStatus?
  summary     String?
  updatedAt   DateTime           @updatedAt
  user        User?              @relation(fields: [userId], references: [id])
  userId      String?
  weekEnding  DateTime?
}

enum EnumKeyResultStatus {
  Option1
}

enum EnumCheckInStatus {
  Option1
}
